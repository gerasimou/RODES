<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

	<!--  Project specific -->
  	<groupId>org</groupId>
  	<artifactId>RODES</artifactId>
  	<packaging>jar</packaging>
  	<version>1.0.1</version>
  	<name>RODES</name>
  	<url>http://maven.apache.org</url>


	<properties>
		<jdk.version>1.8</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

  	<!-- Repositories -->
	<repositories>
		<repository>
	   		<id>localRepository</id>
	   		<url>file://${basedir}/repo</url>
	 	</repository>
	</repositories>


	<!-- Dependencies -->
	<dependencies>
		<!-- JUnit -->
	    <dependency>
	    	<groupId>junit</groupId>
	      	<artifactId>junit</artifactId>
			<version>4.12</version>
	      	<scope>test</scope>
	    </dependency>
	    
		<!--  Antlr4 -->
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4</artifactId>
			<version>4.5</version>
		</dependency>

		<!-- JMetal 4.5 -->
		<dependency>
			<groupId>org.jmetal</groupId>
			<artifactId>jmetal</artifactId>
			<version>4.5</version>
		</dependency>
		
		<!--  Apache Commons Lang: String manipulation -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		
		<!--  Log4J -->		

		<!--  GSON, i.e., Google's JSON -->
	  	<dependency>
	  		<groupId>com.google.code.gson</groupId>
	  		<artifactId>gson</artifactId>
	  		<version>2.5</version>
	  	</dependency>
	  	
	  	<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>2.5</version>
		</dependency>
	  	
		<!--  PrismPSY -->
<!-- 	  	<dependency>
	  		<groupId>org.PrismPSY</groupId>
	  		<artifactId>PrismPSY</artifactId>
	  		<version>1.0</version>
	  	</dependency>
 -->
    </dependencies>


  <build>
  		<finalName>RODES</finalName>
  
  		<!-- Add these resources to the generated JAR
  		<resources>
  			<resource>
  				<directory>models</directory>
  			</resource>
  		</resources> 
  		-->
  
  
  		<plugins>
			<!-- download source code in Eclipse, best practice -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>false</downloadJavadocs>
				</configuration>
			</plugin>
			
			<!-- Set a compiler level -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>


			<!--  Copy resources to target directory -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<!--  Copy models directory -->
					<execution>
						<id>copy-models</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory> ${basedir}/target/models</outputDirectory>
							<resources>
								<resource>
									<directory>models</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<!--  Copy repo directory -->
					<execution>
						<id>copy-repo</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory> ${basedir}/target/repo</outputDirectory>
							<resources>
								<resource>
									<directory>repo</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<!--  Copy launch script -->
					<execution>
						<id>copy-launch</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory> ${basedir}/target</outputDirectory>
							<resources>
								<resource>
									<directory>scripts</directory>
									<includes>
										<include>launch.sh</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<!--  Copy resources directory -->
					<execution>
						<id>copy-resources-dir</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory> ${basedir}/target/resources</outputDirectory>
							<resources>
								<resource>
									<directory>resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<!--  Copy resources directory -->
					<execution>
						<id>create-data-dir</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory> ${basedir}/target/data</outputDirectory>
							<resources>
								<resource>
									<directory>null</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					</executions>
			</plugin>
						
			
			<!-- Maven Assembly Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<!-- get all project dependencies -->
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<!-- MainClass in mainfest make a executable jar -->
					<archive>
					  <manifest>
<!-- 						<mainClass>evochecker.EvoChecker</mainClass>-->
<!--							<mainClass>_main.Experiment</mainClass> -->
							<mainClass>rodes.RODES</mainClass>
					  </manifest>
					</archive>
 
				</configuration>
				<executions>
				  <execution>
					<id>make-assembly</id>
                    <!-- bind to the packaging phase -->
					<phase>install</phase> 
					<goals>
						<goal>single</goal>
					</goals>
				  </execution>
				</executions>
			</plugin>
			
			
			<!--  Maven shade plugin -->
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-shade-plugin</artifactId>
		        <version>3.1.0</version>
		        <executions>
		        		<execution>
		        			<phase>package</phase>
		        			<goals>
		        				<goal>shade</goal>
		        			</goals>
		        			<configuration>
		        				<!-- All dependencies to be packaged in the jar -->
		        				<!-- <shadedArtifactAttached>true</shadedArtifactAttached>-->
		        				<!-- <shadedClassifierName>jar-with-dependencies</shadedClassifierName>-->
		        				<transformers>
		        					<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
			        						<mainClass>rodes.RODESExperiment</mainClass>
			        						<!--<Build-Number>1.0.1</Build-Number>-->
		        					</transformer>
		        				</transformers>
		        			</configuration>
		        		</execution>
		        </executions>				 
			</plugin>
			
  			
			<!-- Clean plugin  -->
			<plugin>
			    <artifactId>maven-clean-plugin</artifactId>
			    <version>2.6.1</version>
			    <configuration>
				      <filesets>
					        <fileset>
						          <directory>${basedir}</directory>
						          <includes>
						            <include>output_Prism.txt</include>
						            <include>FUN*</include>
						            <include>VAR</include>
						          </includes>
					          <followSymlinks>false</followSymlinks>
					        </fileset>
				      </filesets>
			    </configuration>
		  </plugin>
  			
  		</plugins>
  </build>


</project>